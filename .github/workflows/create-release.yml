name: Create GitHub Release

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    name: Build the project with msbuild
    runs-on: windows-latest
    env:
      SOLUTION_FILE_PATH: src/AdventOfCode2020/
      BUILD_CONFIGURATION: Release
      PLATFORM: x64

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v1

      - name: Restore NuGet packages
        working-directory: ${{env.GITHUB_WORKSPACE}}
        run: nuget restore ${{env.SOLUTION_FILE_PATH}}

      - name: Build
        working-directory: ${{env.GITHUB_WORKSPACE}}
        run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}

      - name: zip build
        run: 7z a "my-artifact" -tzip "${{env.SOLUTION_FILE_PATH}}${{env.PLATFORM}}/${{env.BUILD_CONFIGURATION}}"
        
      - name: Upload builds
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: ./my-artifact.zip

#===================================#
  deploy:
    name: Deploy to GitHub releases
    runs-on: ubuntu-latest
    outputs:
      url: ${{ steps.create_release.outputs.upload_url }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: Complete list of all .exe of my C++ solutions for the 2020 Advent Of Code puzzles.
          draft: false
          prerelease: false

#===================================#
  upload:
    name: Upload build to new release
    runs-on: ubuntu-latest
    needs: [build, deploy]

    steps:
      - name: Download the build asset to upload
        uses: actions/download-artifact@v2
        with:
          name: build
          path: build/

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{needs.deploy.outputs.url}}
          asset_path: ./build/my-artifact.zip
          asset_name: graygzou-AoC-2020-solutions.zip
          asset_content_type: application/zip
