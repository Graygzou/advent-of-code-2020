name: MSBuild

on: [push]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: src/AdventOfCode2020/

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release
  
  # Platform used to run msbuild command
  PLATFORM: x64

  REPOSITORY_NAME: advent-of-code-2020

jobs:
  
  # =========================================================================== #
  # ============ Build the entire solution to create all the .exe ============= #
  # =========================================================================== #

  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}

    - name: Upload builds
      uses: actions/upload-artifact@v2
      with:
        name: builds
        path: ${{env.SOLUTION_FILE_PATH}}${{env.PLATFORM}}/${{env.BUILD_CONFIGURATION}}
  
  # =========================================================================== #
  # =============== Start running all the days in separate jobs =============== #
  # =========================================================================== #
      
  run-day-1:
    runs-on: windows-latest
    needs: [build]
    env:
      DAY_NAME: Day1-ReportRepair
    outputs:
      total_time: ${{ steps.run-program.outputs.execution-time }}

    steps:
      - uses: actions/checkout@v2

      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: builds
          path: ${{env.BUILD_CONFIGURATION}}/

      - name: Run program
        id: run-program
        uses: ./.github/actions/run-day-program
        with:
          input-path: "${{env.GITHUB_WORKSPACE}}/${{ env.SOLUTION_FILE_PATH }}${{ env.DAY_NAME }}/input.txt"
          exe-folder: "${{env.BUILD_CONFIGURATION}}/${{ env.DAY_NAME }}.exe"

  run-day-2:
    runs-on: windows-latest
    needs: [build]
    env:
      DAY_NAME: Day2-PasswordPhilosophy
    steps:
      - uses: actions/checkout@v2
      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: builds
          path: ${{env.BUILD_CONFIGURATION}}/

      - name: test-custom-action
        uses: ./.github/actions/run-day-program
        with:
          input-path: ${{env.GITHUB_WORKSPACE}}/${{ env.SOLUTION_FILE_PATH }}${{ env.DAY_NAME }}/input.txt
          exe-folder: ${{env.BUILD_CONFIGURATION}}/${{ env.DAY_NAME }}.exe

  run-day-3:
    runs-on: windows-latest
    needs: [build]
    env:
      DAY_NAME: Day3-TobogganTrajectory
    steps:
      - uses: actions/checkout@v2
      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: builds
          path: ${{env.BUILD_CONFIGURATION}}/

      - name: test-custom-action
        uses: ./.github/actions/run-day-program
        with:
          input-path: ${{env.GITHUB_WORKSPACE}}/${{ env.SOLUTION_FILE_PATH }}${{ env.DAY_NAME }}/input.txt
          exe-folder: ${{env.BUILD_CONFIGURATION}}/${{ env.DAY_NAME }}.exe

  run-day-4:
    runs-on: windows-latest
    needs: [build]
    env:
      DAY_NAME: Day4-PassportProcessing
    steps:
      - uses: actions/checkout@v2
      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: builds
          path: ${{env.BUILD_CONFIGURATION}}/

      - name: test-custom-action
        uses: ./.github/actions/run-day-program
        with:
          input-path: ${{env.GITHUB_WORKSPACE}}/${{ env.SOLUTION_FILE_PATH }}${{ env.DAY_NAME }}/input.txt
          exe-folder: ${{env.BUILD_CONFIGURATION}}/${{ env.DAY_NAME }}.exe

  run-day-5:
    runs-on: windows-latest
    needs: [build]
    env:
      DAY_NAME: Day5-BinaryBoarding
    steps:
      - uses: actions/checkout@v2
      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: builds
          path: ${{env.BUILD_CONFIGURATION}}/

      - name: test-custom-action
        uses: ./.github/actions/run-day-program
        with:
          input-path: ${{env.GITHUB_WORKSPACE}}/${{ env.SOLUTION_FILE_PATH }}${{ env.DAY_NAME }}/input.txt
          exe-folder: ${{env.BUILD_CONFIGURATION}}/${{ env.DAY_NAME }}.exe

  run-day-6:
    runs-on: windows-latest
    needs: [build]
    env:
      DAY_NAME: Day6-CustomCustoms
    steps:
      - uses: actions/checkout@v2
      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: builds
          path: ${{env.BUILD_CONFIGURATION}}/

      - name: test-custom-action
        uses: ./.github/actions/run-day-program
        with:
          input-path: ${{env.GITHUB_WORKSPACE}}/${{ env.SOLUTION_FILE_PATH }}${{ env.DAY_NAME }}/input.txt
          exe-folder: ${{env.BUILD_CONFIGURATION}}/${{ env.DAY_NAME }}.exe

  run-day-7:
    runs-on: windows-latest
    needs: [build]
    env:
      DAY_NAME: Day7-HandyHaversacks
    steps:
      - uses: actions/checkout@v2
      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: builds
          path: ${{env.BUILD_CONFIGURATION}}/

      - name: test-custom-action
        uses: ./.github/actions/run-day-program
        with:
          input-path: ${{env.GITHUB_WORKSPACE}}/${{ env.SOLUTION_FILE_PATH }}${{ env.DAY_NAME }}/input.txt
          exe-folder: ${{env.BUILD_CONFIGURATION}}/${{ env.DAY_NAME }}.exe

  run-day-8:
    runs-on: windows-latest
    needs: [build]
    env:
      DAY_NAME: Day8-HandheldHalting
    steps:
      - uses: actions/checkout@v2
      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: builds
          path: ${{env.BUILD_CONFIGURATION}}/

      - name: test-custom-action
        uses: ./.github/actions/run-day-program
        with:
          input-path: ${{env.GITHUB_WORKSPACE}}/${{ env.SOLUTION_FILE_PATH }}${{ env.DAY_NAME }}/input.txt
          exe-folder: ${{env.BUILD_CONFIGURATION}}/${{ env.DAY_NAME }}.exe

  run-day-9:
    runs-on: windows-latest
    needs: [build]
    env:
      DAY_NAME: Day9-EncodingError
    steps:
      - uses: actions/checkout@v2
      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: builds
          path: ${{env.BUILD_CONFIGURATION}}/

      - name: test-custom-action
        uses: ./.github/actions/run-day-program
        with:
          input-path: ${{env.GITHUB_WORKSPACE}}/${{ env.SOLUTION_FILE_PATH }}${{ env.DAY_NAME }}/input.txt
          exe-folder: ${{env.BUILD_CONFIGURATION}}/${{ env.DAY_NAME }}.exe

      
  run-day-10:
    runs-on: windows-latest
    needs: [build]
    env:
      DAY_NAME: Day10-AdapterArray
    steps:
      - uses: actions/checkout@v2
      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: builds
          path: ${{env.BUILD_CONFIGURATION}}/

      - name: test-custom-action
        uses: ./.github/actions/run-day-program
        with:
          input-path: ${{env.GITHUB_WORKSPACE}}/${{ env.SOLUTION_FILE_PATH }}${{ env.DAY_NAME }}/input.txt
          exe-folder: ${{env.BUILD_CONFIGURATION}}/${{ env.DAY_NAME }}.exe
          
  run-day-11:
    runs-on: windows-latest
    needs: [build]
    env:
      DAY_NAME: Day11-SeatingSystem
    steps:
      - uses: actions/checkout@v2
      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: builds
          path: ${{env.BUILD_CONFIGURATION}}/

      - name: test-custom-action
        uses: ./.github/actions/run-day-program
        with:
          input-path: ${{env.GITHUB_WORKSPACE}}/${{ env.SOLUTION_FILE_PATH }}${{ env.DAY_NAME }}/input.txt
          exe-folder: ${{env.BUILD_CONFIGURATION}}/${{ env.DAY_NAME }}.exe
          
  run-day-12:
    runs-on: windows-latest
    needs: [build]
    env:
      DAY_NAME: Day12-RainRisk
    steps:
      - uses: actions/checkout@v2
      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: builds
          path: ${{env.BUILD_CONFIGURATION}}/

      - name: test-custom-action
        uses: ./.github/actions/run-day-program
        with:
          input-path: ${{env.GITHUB_WORKSPACE}}/${{ env.SOLUTION_FILE_PATH }}${{ env.DAY_NAME }}/input.txt
          exe-folder: ${{env.BUILD_CONFIGURATION}}/${{ env.DAY_NAME }}.exe
          
  run-day-13:
    runs-on: windows-latest
    needs: [build]
    env:
      DAY_NAME: Day13-ShuttleSearch
    steps:
      - uses: actions/checkout@v2
      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: builds
          path: ${{env.BUILD_CONFIGURATION}}/

      - name: test-custom-action
        uses: ./.github/actions/run-day-program
        with:
          input-path: ${{env.GITHUB_WORKSPACE}}/${{ env.SOLUTION_FILE_PATH }}${{ env.DAY_NAME }}/input.txt
          exe-folder: ${{env.BUILD_CONFIGURATION}}/${{ env.DAY_NAME }}.exe
          
  run-day-14:
    runs-on: windows-latest
    needs: [build]
    env:
      DAY_NAME: Day14-DockingData
    steps:
      - uses: actions/checkout@v2
      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: builds
          path: ${{env.BUILD_CONFIGURATION}}/

      - name: test-custom-action
        uses: ./.github/actions/run-day-program
        with:
          input-path: ${{env.GITHUB_WORKSPACE}}/${{ env.SOLUTION_FILE_PATH }}${{ env.DAY_NAME }}/input.txt
          exe-folder: ${{env.BUILD_CONFIGURATION}}/${{ env.DAY_NAME }}.exe
          
  run-day-15:
    runs-on: windows-latest
    needs: [build]
    env:
      DAY_NAME: Day15-RambunctiousRecitation
    steps:
      - uses: actions/checkout@v2
      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: builds
          path: ${{env.BUILD_CONFIGURATION}}/

      - name: test-custom-action
        uses: ./.github/actions/run-day-program
        with:
          input-path: ${{env.GITHUB_WORKSPACE}}/${{ env.SOLUTION_FILE_PATH }}${{ env.DAY_NAME }}/input.txt
          exe-folder: ${{env.BUILD_CONFIGURATION}}/${{ env.DAY_NAME }}.exe
          
  run-day-16:
    runs-on: windows-latest
    needs: [build]
    env:
      DAY_NAME: Day16-TicketTranslation
    steps:
      - uses: actions/checkout@v2
      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: builds
          path: ${{env.BUILD_CONFIGURATION}}/

      - name: test-custom-action
        uses: ./.github/actions/run-day-program
        with:
          input-path: ${{env.GITHUB_WORKSPACE}}/${{ env.SOLUTION_FILE_PATH }}${{ env.DAY_NAME }}/input.txt
          exe-folder: ${{env.BUILD_CONFIGURATION}}/${{ env.DAY_NAME }}.exe
          
  run-day-17:
    runs-on: windows-latest
    needs: [build]
    env:
      DAY_NAME: Day17-ConwayCubes
    steps:
      - uses: actions/checkout@v2
      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: builds
          path: ${{env.BUILD_CONFIGURATION}}/

      - name: test-custom-action
        uses: ./.github/actions/run-day-program
        with:
          input-path: ${{env.GITHUB_WORKSPACE}}/${{ env.SOLUTION_FILE_PATH }}${{ env.DAY_NAME }}/input.txt
          exe-folder: ${{env.BUILD_CONFIGURATION}}/${{ env.DAY_NAME }}.exe
          
  run-day-18:
    runs-on: windows-latest
    needs: [build]
    env:
      DAY_NAME: Day18-OperationOrder
    steps:
      - uses: actions/checkout@v2
      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: builds
          path: ${{env.BUILD_CONFIGURATION}}/

      - name: test-custom-action
        uses: ./.github/actions/run-day-program
        with:
          input-path: ${{env.GITHUB_WORKSPACE}}/${{ env.SOLUTION_FILE_PATH }}${{ env.DAY_NAME }}/input.txt
          exe-folder: ${{env.BUILD_CONFIGURATION}}/${{ env.DAY_NAME }}.exe
          
  run-day-19:
    runs-on: windows-latest
    needs: [build]
    env:
      DAY_NAME: Day19-MonsterMessages
    steps:
      - uses: actions/checkout@v2
      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: builds
          path: ${{env.BUILD_CONFIGURATION}}/

      - name: test-custom-action
        uses: ./.github/actions/run-day-program
        with:
          input-path: ${{env.GITHUB_WORKSPACE}}/${{ env.SOLUTION_FILE_PATH }}${{ env.DAY_NAME }}/input.txt
          exe-folder: ${{env.BUILD_CONFIGURATION}}/${{ env.DAY_NAME }}.exe
          extra-params: .${{env.GITHUB_WORKSPACE}}/${{ env.SOLUTION_FILE_PATH }}${{ env.DAY_NAME }}/inputModified.txt
          
  run-day-20:
    runs-on: windows-latest
    needs: [build]
    env:
      DAY_NAME: Day20-JurassicJigsaw
    steps:
      - uses: actions/checkout@v2
      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: builds
          path: ${{env.BUILD_CONFIGURATION}}/

      - name: test-custom-action
        uses: ./.github/actions/run-day-program
        with:
          input-path: ${{env.GITHUB_WORKSPACE}}/${{ env.SOLUTION_FILE_PATH }}${{ env.DAY_NAME }}/input.txt
          exe-folder: ${{env.BUILD_CONFIGURATION}}/${{ env.DAY_NAME }}.exe
          
  run-day-21:
    runs-on: windows-latest
    needs: [build]
    env:
      DAY_NAME: Day21-AllergenAssessment
    steps:
      - uses: actions/checkout@v2
      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: builds
          path: ${{env.BUILD_CONFIGURATION}}/

      - name: test-custom-action
        uses: ./.github/actions/run-day-program
        with:
          input-path: ${{env.GITHUB_WORKSPACE}}/${{ env.SOLUTION_FILE_PATH }}${{ env.DAY_NAME }}/input.txt
          exe-folder: ${{env.BUILD_CONFIGURATION}}/${{ env.DAY_NAME }}.exe
          
  run-day-22:
    runs-on: windows-latest
    needs: [build]
    env:
      DAY_NAME: Day22-CrabCombat
    steps:
      - uses: actions/checkout@v2
      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: builds
          path: ${{env.BUILD_CONFIGURATION}}/

      - name: test-custom-action
        uses: ./.github/actions/run-day-program
        with:
          input-path: ${{env.GITHUB_WORKSPACE}}/${{ env.SOLUTION_FILE_PATH }}${{ env.DAY_NAME }}/input.txt
          exe-folder: ${{env.BUILD_CONFIGURATION}}/${{ env.DAY_NAME }}.exe
          
  run-day-23:
    runs-on: windows-latest
    needs: [build]
    env:
      DAY_NAME: Day23-CrabCups
    steps:
      - uses: actions/checkout@v2
      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: builds
          path: ${{env.BUILD_CONFIGURATION}}/

      - name: test-custom-action
        uses: ./.github/actions/run-day-program
        with:
          input-path: ${{env.GITHUB_WORKSPACE}}/${{ env.SOLUTION_FILE_PATH }}${{ env.DAY_NAME }}/input.txt
          exe-folder: ${{env.BUILD_CONFIGURATION}}/${{ env.DAY_NAME }}.exe
          
  run-day-24:
    runs-on: windows-latest
    needs: [build]
    env:
      DAY_NAME: Day24-LobbyLayout
    steps:
      - uses: actions/checkout@v2
      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: builds
          path: ${{env.BUILD_CONFIGURATION}}/

      - name: test-custom-action
        uses: ./.github/actions/run-day-program
        with:
          input-path: ${{env.GITHUB_WORKSPACE}}/${{ env.SOLUTION_FILE_PATH }}${{ env.DAY_NAME }}/input.txt
          exe-folder: ${{env.BUILD_CONFIGURATION}}/${{ env.DAY_NAME }}.exe
          
  run-day-25:
    runs-on: windows-latest
    needs: [build]
    env:
      DAY_NAME: Day25-ComboBreaker
    steps:
      - uses: actions/checkout@v2
      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: builds
          path: ${{env.BUILD_CONFIGURATION}}/

      - name: test-custom-action
        uses: ./.github/actions/run-day-program
        with:
          input-path: ${{env.GITHUB_WORKSPACE}}/${{ env.SOLUTION_FILE_PATH }}${{ env.DAY_NAME }}/input.txt
          exe-folder: ${{env.BUILD_CONFIGURATION}}/${{ env.DAY_NAME }}.exe

  update-graphic:
    runs-on: ubuntu-latest
    needs: [run-day-1,run-day-2,run-day-3,run-day-4,run-day-5,run-day-6]
    steps:
      - uses: actions/checkout@v2

      - name: Test
        run: |
          echo ${{needs.run-day-1.outputs.total_time}}
          sed -i "s/\[\!\[chart\]\(.*\)/\[\!\[chart\]\(This\ is\ a\ test\)/g" README.md

      - name: Construct graph string
        run: |
          prefix="https://image-charts.com/chart?chbh=a&chbr=5&"
          colors="chco=fdb45c,27c9c2,1869b7"
          data=$(printf %s "chd=t:50,5,5|10,10,10|15,15,15" | jq -sRr @uri)
          echo $data
          bounds="chds=0,120"
          textmarkers="chm=N,000000,0,,10|N,000000,1,,10|N,000000,2,,10"
          margins="chma=0,0,10,10"
          size="chs=700x150"
          type="cht=bhg"
          axisLabelStyles="chxs=0,000000,0,0,_"
          title="chtt=Title"
          visibleAxes="chxt=y"
          echo $prefix"&"$colors"&"$data"&"$bounds"&"$textmarkers"&"$margins"&"$size"&"$type"&"$axisLabelStyles"&"$title"&"$visibleAxes
          printf %s '$prefix"&"$colors"&"$data"&"$bounds"&"$textmarkers"&"$margins"&"$size"&"$type"&"$axisLabelStyles"&"$title"&"$visibleAxes' | jq -sRr @uri

      - name: Test
        run: |
          echo -n "chma=0,0,10,10&t:50,100&_" | od -A n -t x1
          echo "http%3A%2F%2Fwww%2C%2Cbla%3Ablo" | sed "s@+@ @g;s@%@\\\\x@g" | xargs -0 printf "%b"
          echo "http://www.bla,blo:tttt" | sed "s@%@\\\\x@g;s@+@ @g" | xargs -0 printf "%b"
          printf %s 'http://www.bla,blo:tttt' | jq -sRr @uri
    
          

